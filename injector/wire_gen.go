// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/google/wire"
	"github.com/lenna-ai/bni-iproc/config"
	"github.com/lenna-ai/bni-iproc/controllers"
	"github.com/lenna-ai/bni-iproc/controllers/dashboardController"
	"github.com/lenna-ai/bni-iproc/controllers/dashboardPembayaraanController"
	"github.com/lenna-ai/bni-iproc/controllers/dashboardRekananController"
	"github.com/lenna-ai/bni-iproc/controllers/detailPengadaanController"
	"github.com/lenna-ai/bni-iproc/controllers/loginController"
	"github.com/lenna-ai/bni-iproc/controllers/monitoringController"
	"github.com/lenna-ai/bni-iproc/controllers/pembayaranPrestasiController"
	"github.com/lenna-ai/bni-iproc/repositories/dashboardPembayaranRepositories"
	"github.com/lenna-ai/bni-iproc/repositories/dashboardRekananRepositories"
	"github.com/lenna-ai/bni-iproc/repositories/dashboardRepositories"
	"github.com/lenna-ai/bni-iproc/repositories/detailPengadaanRepositories"
	"github.com/lenna-ai/bni-iproc/repositories/loginRepositories"
	"github.com/lenna-ai/bni-iproc/repositories/monitoringRepositories"
	"github.com/lenna-ai/bni-iproc/repositories/pembayaranPrestasiRepositories"
	"github.com/lenna-ai/bni-iproc/services/dashboardPembayaraanServices"
	"github.com/lenna-ai/bni-iproc/services/dashboardRekananServices"
	"github.com/lenna-ai/bni-iproc/services/dashboardServices"
	"github.com/lenna-ai/bni-iproc/services/detailPengadaanServices"
	"github.com/lenna-ai/bni-iproc/services/loginServices"
	"github.com/lenna-ai/bni-iproc/services/monitoringServices"
	"github.com/lenna-ai/bni-iproc/services/pembayaranPrestasiServices"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeController() *controllers.AllControllers {
	db := ProvideDB()
	loginRepositoryImpl := loginrepositories.NewLoginRepository(db)
	ldapLoginServiceImpl := loginservices.NewLdapLoginService(loginRepositoryImpl)
	loginControllerImpl := loginController.NewloginController(ldapLoginServiceImpl)
	dashboardRepositoryImpl := dashboardrepositories.NewDashboardRepository(db)
	dashboardServiceImpl := dashboardservices.NewDashboardService(dashboardRepositoryImpl)
	dashboardControllerImpl := dashboardcontroller.NewDashboardController(dashboardServiceImpl)
	dashboardRekananRepositoryImpl := dashboardrekananrepositories.NewDashboardRekananRepository(db)
	dashboardRekananServiceImpl := dashboardrekananservices.NewDashboardRekananService(dashboardRekananRepositoryImpl)
	dashboardRekananImpl := dashboardrekanancontroller.NewDashboardRekananController(dashboardRekananServiceImpl)
	pengadaanRepositoryImpl := detailpengadaanrepositories.NewDetailPengadaanRepository(db)
	pengadaanServiceImpl := detailpengadaanservices.NewDetailPengadaanService(pengadaanRepositoryImpl)
	pengadaanControllerImpl := detailpengadaancontroller.NewDetailPengadaanController(pengadaanServiceImpl)
	pembayaranMonitoringRepositoryImpl := dashboardpembayaranrepositories.NewDashboardMonitoringRepository(db)
	pembayaranMonitoringServicesImpl := dashboardpembayaranservices.NewPembayaranMonitoringServices(pembayaranMonitoringRepositoryImpl)
	pembayaranMonitoringControllerImpl := dashboardpembayarancontroller.NewPembayaranMonitoringController(pembayaranMonitoringServicesImpl)
	monitoringProsesPengadaanImpl := monitoringrepositories.NewMonitoringProsesPengadaan(db)
	monitoringservicesMonitoringProsesPengadaanImpl := monitoringservices.NewMonitoringProsesPengadaan(monitoringProsesPengadaanImpl)
	monitoringcontrollerMonitoringProsesPengadaanImpl := monitoringcontroller.NewMonitoringProsesPengadaan(monitoringservicesMonitoringProsesPengadaanImpl)
	pembayaranRutinRepositoryImpl := monitoringrepositories.NewPembayaranRutinRepository(db)
	pembayaranRutinServiceImpl := monitoringservices.NewPembayaranRutinService(pembayaranRutinRepositoryImpl)
	pembayaranRutinControllerImpl := monitoringcontroller.NewPembayaranRutinController(pembayaranRutinServiceImpl)
	pembayaranPrestasiRepositoryImpl := pembayaranprestasirepositories.NewPembayaranPrestasiRepository(db)
	pembayaranPrestasiServiceImpl := pembayaranprestasiservices.NewPembayaranPrestasiService(pembayaranPrestasiRepositoryImpl)
	pembayaranPrestasiControllerImpl := pembayaranprestasicontroller.NewPembayaranPrestasiController(pembayaranPrestasiServiceImpl)
	allControllers := &controllers.AllControllers{
		LoginController:                loginControllerImpl,
		DashboardController:            dashboardControllerImpl,
		DashboardRekananController:     dashboardRekananImpl,
		PengadaanController:            pengadaanControllerImpl,
		PembayaranMonitoringController: pembayaranMonitoringControllerImpl,
		MonitoringProsesPengadaan:      monitoringcontrollerMonitoringProsesPengadaanImpl,
		PembayaranRutinController:      pembayaranRutinControllerImpl,
		PembayaranPrestasiController:   pembayaranPrestasiControllerImpl,
	}
	return allControllers
}

// wire.go:

func ProvideDB() *gorm.DB {
	db := config.DB
	return db
}

var setLoginController = wire.NewSet(loginrepositories.NewLoginRepository, wire.Bind(new(loginrepositories.LoginRepository), new(*loginrepositories.LoginRepositoryImpl)), loginservices.NewLdapLoginService, wire.Bind(new(loginservices.LdapLoginService), new(*loginservices.LdapLoginServiceImpl)), loginController.NewloginController, wire.Bind(new(loginController.LoginController), new(*loginController.LoginControllerImpl)))

var setDashboardController = wire.NewSet(dashboardrepositories.NewDashboardRepository, wire.Bind(new(dashboardrepositories.DashboardRepository), new(*dashboardrepositories.DashboardRepositoryImpl)), dashboardservices.NewDashboardService, wire.Bind(new(dashboardservices.DashboardService), new(*dashboardservices.DashboardServiceImpl)), dashboardcontroller.NewDashboardController, wire.Bind(new(dashboardcontroller.DashboardController), new(*dashboardcontroller.DashboardControllerImpl)))

var setDashboardRekananController = wire.NewSet(dashboardrekananrepositories.NewDashboardRekananRepository, wire.Bind(new(dashboardrekananrepositories.DashboardRekananRepository), new(*dashboardrekananrepositories.DashboardRekananRepositoryImpl)), dashboardrekananservices.NewDashboardRekananService, wire.Bind(new(dashboardrekananservices.DashboardRekananService), new(*dashboardrekananservices.DashboardRekananServiceImpl)), dashboardrekanancontroller.NewDashboardRekananController, wire.Bind(new(dashboardrekanancontroller.DashboardRekanan), new(*dashboardrekanancontroller.DashboardRekananImpl)))

var setPengadaanController = wire.NewSet(detailpengadaanrepositories.NewDetailPengadaanRepository, wire.Bind(new(detailpengadaanrepositories.PengadaanRepository), new(*detailpengadaanrepositories.PengadaanRepositoryImpl)), detailpengadaanservices.NewDetailPengadaanService, wire.Bind(new(detailpengadaanservices.PengadaanService), new(*detailpengadaanservices.PengadaanServiceImpl)), detailpengadaancontroller.NewDetailPengadaanController, wire.Bind(new(detailpengadaancontroller.PengadaanDoneController), new(*detailpengadaancontroller.PengadaanControllerImpl)))

var setPembayaranMonitoringController = wire.NewSet(dashboardpembayaranrepositories.NewDashboardMonitoringRepository, wire.Bind(new(dashboardpembayaranrepositories.PembayaranMonitoringRepository), new(*dashboardpembayaranrepositories.PembayaranMonitoringRepositoryImpl)), dashboardpembayaranservices.NewPembayaranMonitoringServices, wire.Bind(new(dashboardpembayaranservices.PembayaranMonitoringServices), new(*dashboardpembayaranservices.PembayaranMonitoringServicesImpl)), dashboardpembayarancontroller.NewPembayaranMonitoringController, wire.Bind(new(dashboardpembayarancontroller.PembayaranMonitoringController), new(*dashboardpembayarancontroller.PembayaranMonitoringControllerImpl)))

var setMonitoringProsesPengadaanController = wire.NewSet(monitoringrepositories.NewMonitoringProsesPengadaan, wire.Bind(new(monitoringrepositories.MonitoringProsesPengadaan), new(*monitoringrepositories.MonitoringProsesPengadaanImpl)), monitoringservices.NewMonitoringProsesPengadaan, wire.Bind(new(monitoringservices.MonitoringProsesPengadaan), new(*monitoringservices.MonitoringProsesPengadaanImpl)), monitoringcontroller.NewMonitoringProsesPengadaan, wire.Bind(new(monitoringcontroller.MonitoringProsesPengadaan), new(*monitoringcontroller.MonitoringProsesPengadaanImpl)))

var setPembayaranRutinController = wire.NewSet(monitoringrepositories.NewPembayaranRutinRepository, wire.Bind(new(monitoringrepositories.PembayaranRutinRepository), new(*monitoringrepositories.PembayaranRutinRepositoryImpl)), monitoringservices.NewPembayaranRutinService, wire.Bind(new(monitoringservices.PembayaranRutinService), new(*monitoringservices.PembayaranRutinServiceImpl)), monitoringcontroller.NewPembayaranRutinController, wire.Bind(new(monitoringcontroller.PembayaranRutinController), new(*monitoringcontroller.PembayaranRutinControllerImpl)))

var setPembayaranPrestasiController = wire.NewSet(pembayaranprestasirepositories.NewPembayaranPrestasiRepository, wire.Bind(new(pembayaranprestasirepositories.PembayaranPrestasiRepository), new(*pembayaranprestasirepositories.PembayaranPrestasiRepositoryImpl)), pembayaranprestasiservices.NewPembayaranPrestasiService, wire.Bind(new(pembayaranprestasiservices.PembayaranPrestasiService), new(*pembayaranprestasiservices.PembayaranPrestasiServiceImpl)), pembayaranprestasicontroller.NewPembayaranPrestasiController, wire.Bind(new(pembayaranprestasicontroller.PembayaranPrestasiController), new(*pembayaranprestasicontroller.PembayaranPrestasiControllerImpl)))

var setAllControllers = wire.NewSet(
	ProvideDB,
	setLoginController,
	setDashboardController,
	setDashboardRekananController,
	setPengadaanController,
	setPembayaranMonitoringController,
	setMonitoringProsesPengadaanController,
	setPembayaranRutinController,
	setPembayaranPrestasiController, wire.Struct(new(controllers.AllControllers), "*"),
)
